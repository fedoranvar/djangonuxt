volumes:
  docs_app_db:

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.100.0/24
          gateway: 172.16.100.1

services:
  frontend:
    build:
      context: .
      dockerfile: .docker/frontend.Dockerfile
      target: builder # or frontend
    ports:
      - "8001:3000"
    networks:
      app_net:
        ipv4_address: 172.16.100.12

    volumes:
      - ./frontend:/app
    entrypoint: ["pnpm"]
    command: ["run", "dev"]

  backend:
    build:
      context: .
      dockerfile: .docker/backend.Dockerfile
      target: builder # or backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      app_net:
        ipv4_address: 172.16.100.11
    volumes:
      - ./backend:/app
    entrypoint: ["python"]
    command: ["manage.py", "runserver", "0.0.0.0:8000"]

  db:
    image: mongo
    volumes:
      - docs_app_db:/data/db
    ports:
      - 27017:27017
    networks:
      app_net:
        ipv4_address: 172.16.100.10
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin

  mongoexpress:
    image: mongo-express
    ports:
      - 8003:8081
    depends_on:
      - db
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin@db/
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
    networks:
      app_net:
        ipv4_address: 172.16.100.14

  # migration:
#     build: .
#     image: app
#     command: python manage.py migrate
#     volumes:
#       - .:/django_mongodb_docker
#     links:
#       - mongodb
#     depends_on:
#       - make_migrations
#
#   make_migrations:
#     build: .
#     image: app
#     command: python manage.py makemigrations
#     volumes:
#       - .:/django_mongodb_docker
#     links:
#       - mongodb
#     depends_on:
#       - mongodb
